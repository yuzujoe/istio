# Copyright Istio Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

##################################################################################################
# This file defines the services, service accounts, and deployments for the Bookinfo sample.
#
# To apply all 4 Bookinfo services, their corresponding service accounts, and deployments:
#
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml
#
# Alternatively, you can deploy any resource separately:
#
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -l service=reviews # reviews Service
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -l account=reviews # reviews ServiceAccount
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -l app=reviews,version=v3 # reviews-v3 Deployment
##################################################################################################

##################################################################################################
# Details service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: details
  namespace: book-info
  labels:
    app: details
    service: details
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: details
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: book-info
  name: bookinfo-details
  labels:
    account: details
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: book-info
  name: details-v1
  labels:
    app: details
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: details
      version: v1
  template:
    metadata:
      labels:
        app: details
        version: v1
    spec:
      serviceAccountName: bookinfo-details
      containers:
      - name: details
        image: 290140632813.dkr.ecr.ap-northeast-1.amazonaws.com/details:v0.0.5
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
        env:
          - name: NEW_RELIC_ENV
            value: production
          - name: NEWRELIC_KEY
            valueFrom:
              secretKeyRef:
                key: newrelic_key
                name: book-info
#          - name: DO_NOT_ENCRYPT
#            value: "true"
        securityContext:
          runAsUser: 1000
---
##################################################################################################
# Ratings service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: ratings
  namespace: book-info
  labels:
    app: ratings
    service: ratings
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: ratings
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-ratings
  namespace: book-info
  labels:
    account: ratings
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings-v1
  namespace: book-info
  labels:
    app: ratings
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings
      version: v1
  template:
    metadata:
      labels:
        app: ratings
        version: v1
    spec:
      serviceAccountName: bookinfo-ratings
      containers:
      - name: ratings
        image: 290140632813.dkr.ecr.ap-northeast-1.amazonaws.com/ratings:v0.0.10
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
        env:
        - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
          value: 'true'
        - name: NEW_RELIC_APP_NAME
          value: 'ratings'
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              key: yohira_2_key
              name: book-info
        - name: DB_TYPE
          value: "mysql"
        - name: MYSQL_DB_HOST
          value: mysqldb
        - name: MYSQL_DB_PORT
          value: "3306"
        - name: MYSQL_DB_USER
          value: root
        - name: MYSQL_DB_PASSWORD
          value: password
        securityContext:
          runAsUser: 1000
---
##################################################################################################
# Reviews service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: reviews
  namespace: book-info
  labels:
    app: reviews
    service: reviews
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: reviews
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-reviews
  namespace: book-info
  labels:
    account: reviews
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v1
  namespace: book-info
  labels:
    app: reviews
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v1
  template:
    metadata:
      labels:
        app: reviews
        version: v1
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
      - name: reviews
#        image: docker.io/istio/examples-bookinfo-reviews-v1:1.16.2
        image: 290140632813.dkr.ecr.ap-northeast-1.amazonaws.com/reviews-v1:v0.0.16
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        - name: NEW_RELIC_APP_NAME
          value: reviews-v1
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              key: yohira_3_key
              name: book-info
        - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
          value: 'true'
        - name: NEW_RELIC_JFR_ENABLED
          value: 'ture'
        - name: NEW_RELIC_APPLICATION_LOGGING_ENABLED
          value: 'true'
        - name: NEW_RELIC_APPLICATION_LOGGING_FORWARDING_ENABLED
          value: 'true'
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        securityContext:
          runAsUser: 1000
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v2
  namespace: book-info
  labels:
    app: reviews
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v2
  template:
    metadata:
      labels:
        app: reviews
        version: v2
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
      - name: reviews
#        image: docker.io/istio/examples-bookinfo-reviews-v2:1.16.2
        image: 290140632813.dkr.ecr.ap-northeast-1.amazonaws.com/reviews-v2:v0.0.11
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        - name: NEW_RELIC_APP_NAME
          value: reviews-v2
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              key: yohira_3_key
              name: book-info
        - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
          value: 'true'
        - name: NEW_RELIC_APPLICATION_LOGGING_ENABLED
          value: 'true'
        - name: NEW_RELIC_APPLICATION_LOGGING_FORWARDING_ENABLED
          value: 'true'
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        securityContext:
          runAsUser: 1000
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v3
  namespace: book-info
  labels:
    app: reviews
    version: v3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v3
  template:
    metadata:
      labels:
        app: reviews
        version: v3
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
      - name: reviews
#        image: docker.io/istio/examples-bookinfo-reviews-v3:1.16.2
        image: 290140632813.dkr.ecr.ap-northeast-1.amazonaws.com/reviews-v3:v0.0.6
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        - name: NEW_RELIC_APP_NAME
          value: reviews-v3
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              key: yohira_3_key
              name: book-info
        - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
          value: 'true'
        - name: NEW_RELIC_APPLICATION_LOGGING_ENABLED
          value: 'true'
        - name: NEW_RELIC_APPLICATION_LOGGING_FORWARDING_ENABLED
          value: 'true'
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        securityContext:
          runAsUser: 1000
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
##################################################################################################
# Productpage services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: productpage
  namespace: book-info
  labels:
    app: productpage
    service: productpage
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: productpage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-productpage
  namespace: book-info
  labels:
    account: productpage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productpage-v1
  namespace: book-info
  labels:
    app: productpage
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productpage
      version: v1
  template:
    metadata:
      labels:
        app: productpage
        version: v1
    spec:
      serviceAccountName: bookinfo-productpage
      containers:
      - name: productpage
        image: 290140632813.dkr.ecr.ap-northeast-1.amazonaws.com/productpage:v0.0.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        securityContext:
          runAsUser: 1000
        env:
          - name: NEW_RELIC_APP_NAME
            value: "bookinfo-productpage"
          - name: NEW_RELIC_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                key: newrelic_key
                name: book-info
      volumes:
      - name: tmp
        emptyDir: {}
---
###########
# Secret
###########
apiVersion: v1
kind: Secret
metadata:
  name: book-info
  namespace: book-info
type: Opaque
data:
  newrelic_key: OTg2YzQ1MGZiODE0ZDk5MzVkYjkzNTBjNmU2NmI2NGNiZmI5TlJBTA==
  yohira_2_key: OWE3ZGQxNjFjY2NiOGVhYmY1ZmQ0YTRiZjJkZTdkNWVkMDFmTlJBTA==
  yohira_3_key: NTQxMDUwNDNiOThiNjc3NDgyNzRiNjNmMDI5NzNhMmM2ODU3TlJBTA==
